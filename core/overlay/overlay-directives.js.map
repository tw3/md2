{"version":3,"file":"overlay-directives.js","sourceRoot":"","sources":["../../../../src/lib/core/overlay/overlay-directives.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    NgModule,\n    ModuleWithProviders,\n    Directive,\n    EventEmitter,\n    TemplateRef,\n    ViewContainerRef,\n    Optional,\n    Input,\n    OnDestroy,\n    Output,\n    ElementRef\n} from '@angular/core';\nimport {Overlay, OVERLAY_PROVIDERS} from './overlay';\nimport {OverlayRef} from './overlay-ref';\nimport {TemplatePortal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {\n    ConnectionPositionPair,\n    ConnectedOverlayPositionChange\n} from './position/connected-position';\nimport {PortalModule} from '../portal/portal-directives';\nimport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Dir, LayoutDirection} from '../rtl/dir';\nimport {Scrollable} from './scroll/scrollable';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nlet defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n];\n\n\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-overlay-origin], [overlay-origin]',\n  exportAs: 'cdkOverlayOrigin',\n})\nexport class OverlayOrigin {\n  constructor(public elementRef: ElementRef) { }\n}\n\n\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\n@Directive({\n  selector: '[cdk-connected-overlay], [connected-overlay]',\n  exportAs: 'cdkConnectedOverlay'\n})\nexport class ConnectedOverlayDirective implements OnDestroy {\n  private _overlayRef: OverlayRef;\n  private _templatePortal: TemplatePortal;\n  private _open = false;\n  private _hasBackdrop = false;\n  private _backdropSubscription: Subscription;\n  private _positionSubscription: Subscription;\n  private _offsetX: number = 0;\n  private _offsetY: number = 0;\n  private _position: ConnectedPositionStrategy;\n\n  /** Origin for the connected overlay. */\n  @Input() origin: OverlayOrigin;\n\n  /** Registered connected position pairs. */\n  @Input() positions: ConnectionPositionPair[];\n\n  /** The offset in pixels for the overlay connection point on the x-axis */\n  @Input()\n  get offsetX(): number {\n    return this._offsetX;\n  }\n\n  set offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n    if (this._position) {\n      this._position.withOffsetX(offsetX);\n    }\n  }\n\n  /** The offset in pixels for the overlay connection point on the y-axis */\n  @Input()\n  get offsetY() {\n    return this._offsetY;\n  }\n\n  set offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n    if (this._position) {\n      this._position.withOffsetY(offsetY);\n    }\n  }\n\n  /** The width of the overlay panel. */\n  @Input() width: number | string;\n\n  /** The height of the overlay panel. */\n  @Input() height: number | string;\n\n  /** The min width of the overlay panel. */\n  @Input() minWidth: number | string;\n\n  /** The min height of the overlay panel. */\n  @Input() minHeight: number | string;\n\n  /** The custom class to be set on the backdrop element. */\n  @Input() backdropClass: string;\n\n  /** Whether or not the overlay should attach a backdrop. */\n  @Input()\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n\n  set hasBackdrop(value: any) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n\n  @Input()\n  get open() {\n    return this._open;\n  }\n\n  set open(value: boolean) {\n    value ? this._attachOverlay() : this._detachOverlay();\n    this._open = value;\n  }\n\n  /** Event emitted when the backdrop is clicked. */\n  @Output() backdropClick = new EventEmitter<void>();\n\n  /** Event emitted when the position has changed. */\n  @Output() positionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n\n  /** Event emitted when the overlay has been attached. */\n  @Output() attach = new EventEmitter<void>();\n\n  /** Event emitted when the overlay has been detached. */\n  @Output() detach = new EventEmitter<void>();\n\n  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n\n  constructor(\n      private _overlay: Overlay,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\n      @Optional() private _dir: Dir) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n\n  /** The associated overlay reference. */\n  get overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n\n  /** The element's layout direction. */\n  get dir(): LayoutDirection {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n  }\n\n  /** Creates an overlay */\n  private _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    this._overlayRef = this._overlay.create(this._buildConfig());\n  }\n\n  /** Builds the overlay config based on the directive's inputs */\n  private _buildConfig(): OverlayState {\n    let overlayConfig = new OverlayState();\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    overlayConfig.hasBackdrop = this.hasBackdrop;\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    this._position = this._createPositionStrategy() as ConnectedPositionStrategy;\n    overlayConfig.positionStrategy = this._position;\n\n    return overlayConfig;\n  }\n\n  /** Returns the position strategy of the overlay to be set on the overlay config */\n  private _createPositionStrategy(): ConnectedPositionStrategy {\n    const pos = this.positions[0];\n    const originPoint = {originX: pos.originX, originY: pos.originY};\n    const overlayPoint = {overlayX: pos.overlayX, overlayY: pos.overlayY};\n\n    const strategy = this._overlay.position()\n      .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n      .withOffsetX(this.offsetX)\n      .withOffsetY(this.offsetY);\n\n    this._handlePositionChanges(strategy);\n\n    return strategy;\n  }\n\n  private _handlePositionChanges(strategy: ConnectedPositionStrategy): void {\n    for (let i = 1; i < this.positions.length; i++) {\n      strategy.withFallbackPosition(\n          {originX: this.positions[i].originX, originY: this.positions[i].originY},\n          {overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY}\n      );\n    }\n\n    this._positionSubscription =\n        strategy.onPositionChange.subscribe(pos => this.positionChange.emit(pos));\n  }\n\n  /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n  private _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n\n    this._position.withDirection(this.dir);\n    this._overlayRef.getState().direction = this.dir;\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n      this.attach.emit();\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n        this.backdropClick.emit();\n      });\n    }\n  }\n\n  /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n  private _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this.detach.emit();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n      this._backdropSubscription = null;\n    }\n  }\n\n  /** Destroys the overlay created by this directive. */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n  }\n}\n\n\n@NgModule({\n  imports: [PortalModule],\n  exports: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n  declarations: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n  providers: [OVERLAY_PROVIDERS],\n})\nexport class OverlayModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: OverlayModule,\n      providers: [],\n    };\n  }\n}\n"]}